scriptencoding utf-8

function! s:set_first_line(str)
    call setline(1, a:str)
endfunction

Describe 'github_complete#emoji'
    Describe '#has_vim_emoji()'
        It returns false when vim-emoji is not installed
            Assert False(github_complete#emoji#has_vim_emoji())
        End

        It returns true when vim-emoji is installed
            Skip because I don't know how to install dependant plugins yet.
            Assert True(github_complete#emoji#has_vim_emoji())
        End
    End

    Describe #find_start()
        It returns the column to start completion
            call s:set_first_line(' aaa :bbb')
            normal! gg$
            Assert Equals(github_complete#emoji#find_start(' aaa :bbb'), 5)

            call s:set_first_line(' aa :bbb poyo')
            normal! gg$Tb
            Assert Equals(github_complete#emoji#find_start(' aa :bbb poyo'), 4)

            call s:set_first_line(' a :bbb)')
            normal! gg$
            Assert Equals(github_complete#emoji#find_start(' a :bbb)'), 3)

            call s:set_first_line(':)')
            normal! gg$
            Assert Equals(github_complete#emoji#find_start(':)'), 0)
        End

        It returns -1 when the column to start completion is not found
            call s:set_first_line(' aaa bbb')
            normal! gg$
            Assert Equals(github_complete#emoji#find_start(' aaa bbb'), -1)
        End
    End

    Describe #candidates()
        It returns empty list when vim-emoji is not installed
            Assert True(empty(github_complete#emoji#candidates('')))
        End

        It returns all emojis list when base is not specified
            Skip because I don't know how to install dependant plugins yet.
            Assert True(!empty(github_complete#emoji#candidates('')))
        End

        It returns base-prefixed emojis list when base is specified
            Skip because I don't know how to install dependant plugins yet.
            let emojis = github_complete#emoji#candidates(':do')
            for e in emojis
                Assert True(e.word =~# '^:do')
            endfor
        End
    End
End

Describe 'github_complete#workaround#japanese'
    Describe '#for()'
        It returns japanese description for emojis
            Assert Equals(github_complete#workaround#japanese#for('dog'), '猟犬')
            Assert Equals(github_complete#workaround#japanese#for('dog2'), '犬')
        End

        It returns empty string for undefined emoji
            Assert Equals(github_complete#workaround#japanese#for('unknown_mysterious_animal'), '')
        End
    End
End
